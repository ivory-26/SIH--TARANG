#!/usr/bin/env python3\n\"\"\"\nSimple API test for Float-Chat-AI backend\n\"\"\"\n\nimport asyncio\nfrom fastapi.testclient import TestClient\nfrom main import app\nimport json\n\ndef test_health_endpoint():\n    \"\"\"Test the health endpoint\"\"\"\n    with TestClient(app) as client:\n        response = client.get(\"/health\")\n        print(f\"Health endpoint status: {response.status_code}\")\n        print(f\"Response: {response.json()}\")\n        assert response.status_code == 200\n        assert response.json()[\"status\"] == \"healthy\"\n        return True\n\ndef test_query_endpoint():\n    \"\"\"Test the query endpoint\"\"\"\n    with TestClient(app) as client:\n        query_data = {\n            \"query\": \"What's the average temperature?\",\n            \"session_id\": \"test_session\",\n            \"user_id\": \"test_user\"\n        }\n        \n        print(f\"\\nTesting query endpoint with: {query_data['query']}\")\n        response = client.post(\"/query\", json=query_data)\n        print(f\"Query endpoint status: {response.status_code}\")\n        \n        if response.status_code == 200:\n            result = response.json()\n            print(f\"AI Response: {result.get('response', 'No response')}\")\n            print(f\"Session ID: {result.get('session_id')}\")\n            print(f\"Query ID: {result.get('query_id')}\")\n            return True\n        else:\n            print(f\"Error: {response.text}\")\n            return False\n\ndef main():\n    \"\"\"Main test function\"\"\"\n    print(\"🌊 Float-Chat-AI API Test\")\n    print(\"=\" * 40)\n    \n    try:\n        # Test health endpoint\n        print(\"\\n1. Testing Health Endpoint\")\n        if test_health_endpoint():\n            print(\"✅ Health endpoint working\")\n        else:\n            print(\"❌ Health endpoint failed\")\n            return False\n        \n        # Test query endpoint  \n        print(\"\\n2. Testing Query Endpoint\")\n        if test_query_endpoint():\n            print(\"✅ Query endpoint working\")\n        else:\n            print(\"❌ Query endpoint failed\")\n            return False\n            \n        print(\"\\n🎉 All API tests passed!\")\n        print(\"\\n📋 Summary:\")\n        print(\"   ✅ FastAPI server loads successfully\")\n        print(\"   ✅ Health endpoint responds\")\n        print(\"   ✅ Query processing pipeline works\")\n        print(\"   ✅ AI service generates responses\")\n        print(\"   ✅ Session management works\")\n        print(\"\\n🚀 Float-Chat-AI backend is working correctly!\")\n        \n        return True\n        \n    except Exception as e:\n        print(f\"\\n❌ Test failed with error: {str(e)}\")\n        import traceback\n        traceback.print_exc()\n        return False\n\nif __name__ == \"__main__\":\n    success = main()\n    if not success:\n        exit(1)